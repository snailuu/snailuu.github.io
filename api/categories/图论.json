{"name":"图论","slug":"图论","count":3,"postlist":[{"title":"图论最短路问题","uid":"aa03b2f0abb625816c3d81ed8f81147b","slug":"图论最短路","date":"2022-02-13T07:19:11.220Z","updated":"2022-02-16T06:08:37.796Z","comments":true,"path":"api/articles/图论最短路.json","keywords":null,"cover":"https://pic.imgdb.cn/item/62091b5f2ab3f51d91da3fbb.jpg","text":"朴素版Dijkstra算法(适用于稠密图)思路 初始化距离数组和邻接矩阵（无穷大） 处理重边问题在输入取最小值 每次找到一个最小的未更新的答案点 将其连边答案全部更新 例题：Dijkstra算法朴素版 代码实现如下： #include &lt;bits/stdc++.h&gt; ...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"图论","slug":"图论","count":3,"path":"api/categories/图论.json"}],"tags":[{"name":"最短路","slug":"最短路","count":1,"path":"api/tags/最短路.json"},{"name":"稠密图","slug":"稠密图","count":1,"path":"api/tags/稠密图.json"},{"name":"稀疏图","slug":"稀疏图","count":1,"path":"api/tags/稀疏图.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/62035c342ab3f51d91f6154a.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"拓扑排序","uid":"01d132f13ac67dff21350f57c338a855","slug":"拓扑排序","date":"2022-02-13T07:19:11.215Z","updated":"2022-02-13T14:53:43.715Z","comments":true,"path":"api/articles/拓扑排序.json","keywords":null,"cover":"https://pic.imgdb.cn/item/62091b702ab3f51d91da51dd.jpg","text":"拓扑排序应用场景在做某些事的时候他们之间有前后关系（顺序关系或者依赖关系），比如安排座位，穿衣服先后，课程学习等等。 拓扑排序只对于有向无环图而言(Directed Acyclic Graph简称DAG) 如果有a,b,c,d等件事情，a的优先级最高，d的优先级最低，那么abcd...","link":"","photos":[],"count_time":{"symbolsCount":814,"symbolsTime":"1 mins."},"categories":[{"name":"图论","slug":"图论","count":3,"path":"api/categories/图论.json"}],"tags":[{"name":"图论","slug":"图论","count":2,"path":"api/tags/图论.json"},{"name":"排序","slug":"排序","count":1,"path":"api/tags/排序.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/62035c342ab3f51d91f6154a.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"最小生成树","uid":"f83333b56248d745b141d3885b656c81","slug":"最小生成树","date":"2022-02-13T07:22:11.269Z","updated":"2022-02-16T03:02:44.803Z","comments":true,"path":"api/articles/最小生成树.json","keywords":null,"cover":"https://pic.imgdb.cn/item/62091b402ab3f51d91da1db3.jpg","text":"假设表示图中点数，表示图中边数 朴素版Prim算法（适用于稠密图，复杂度O())思路：将条边到另一条边的距离初始化成从遍历到找到集合外距离最小的点标记为，用来更新它到集合的距离，标记一下 例题：Prim算法求最小生成树 核心代码： // st[i] 表示点i是否在当前生成树集合中...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"图论","slug":"图论","count":3,"path":"api/categories/图论.json"}],"tags":[{"name":"图论","slug":"图论","count":2,"path":"api/tags/图论.json"},{"name":"生成树","slug":"生成树","count":1,"path":"api/tags/生成树.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/62035c342ab3f51d91f6154a.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}]}