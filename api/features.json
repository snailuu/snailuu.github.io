[{"title":"逆元","uid":"e7c582089fc58c53917014ad61ddc86d","slug":"逆元","date":"2022-03-02T13:40:44.841Z","updated":"2022-03-02T14:29:01.664Z","comments":true,"path":"api/articles/逆元.json","cover":"https://pic.imgdb.cn/item/621f74715baa1a80ab0be146.jpg","text":"乘法逆元拓展欧几里得时间复杂度： 假设n为模数，如果 不是质数时可以用拓展欧几里得算法求逆元： 有逆元的充要条件是 与 互质，所以 假设 的逆元为 ，那么 等价于 求 ，用拓展欧几里得递归到最后x为 int exgcd(int a, int b, int &amp;x, int ...","link":"","photos":[],"count_time":{"symbolsCount":909,"symbolsTime":"1 mins."},"categories":[{"name":"数学","slug":"数学","count":2,"path":"api/categories/数学.json"}],"tags":[{"name":"数论","slug":"数论","count":1,"path":"api/tags/数论.json"},{"name":"逆元","slug":"逆元","count":1,"path":"api/tags/逆元.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/02/cf596ea7a7a4830f.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":"flase"},{"title":"模板","uid":"3c194b2f2319e046c85e1bc082983d3c","slug":"模板","date":"2022-02-16T08:35:59.408Z","updated":"2022-02-18T07:08:48.853Z","comments":true,"path":"api/articles/模板.json","cover":"https://pic.imgdb.cn/item/620c7b2d2ab3f51d91aff6f7.jpg","text":"本篇文章作为跳转文章，如需阅读模板请点击下方各类按钮基础算法数据结构搜索与图论数学","link":"","photos":[],"count_time":{"symbolsCount":41,"symbolsTime":"1 mins."},"categories":[{"name":"模板","slug":"模板","count":2,"path":"api/categories/模板.json"}],"tags":[],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/02/cf596ea7a7a4830f.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"杂乱笔记","uid":"40516069856649c61c80ebcc0b14851f","slug":"杂点笔记","date":"2022-02-16T04:06:58.194Z","updated":"2022-03-02T11:27:54.607Z","comments":true,"path":"api/articles/杂点笔记.json","cover":"https://pic.imgdb.cn/item/620c7af22ab3f51d91afbaa6.jpg","text":"字符串 string类的插入insert(pos,string) 在下标pos和pos+1之间插入字符串string。 string类的删除earse(pos,num)从下标pos开始删除num个字符，如果num为空则删除pos后面的所有字符。 数学 取模的顺序：一定要优先对可能...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"笔记","slug":"笔记","count":1,"path":"api/categories/笔记.json"}],"tags":[{"name":"数学","slug":"数学","count":2,"path":"api/tags/数学.json"},{"name":"字符串","slug":"字符串","count":1,"path":"api/tags/字符串.json"},{"name":"动态规划","slug":"动态规划","count":2,"path":"api/tags/动态规划.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/02/cf596ea7a7a4830f.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]