{"total":20,"pageSize":12,"pageCount":2,"data":[{"title":"错误之路","uid":"ef2958a60eebffed61302cfeed7e9fed","slug":"错误之路","date":"2022-02-16T02:58:30.254Z","updated":"2022-03-02T13:07:36.979Z","comments":true,"path":"api/articles/错误之路.json","cover":"https://pic.imgdb.cn/item/620a098b2ab3f51d9196f63a.jpg","text":"本篇文章用于记录学习之路/比赛上看似不起眼的小错误却又不得不重视的，一直都在更新…… 2022.02.15 res=pow(a,b) 当res为int类型时，b应该为常量。当res为double类型时，b应该为常量、int、double。 2022.02.19 在遇到开根之类的，...","link":"","photos":[],"count_time":{"symbolsCount":513,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/02/cf596ea7a7a4830f.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"回文字符串","uid":"768c5d200987ad0ffa01337632098c22","slug":"回文字符串","date":"2022-02-15T03:47:30.314Z","updated":"2022-02-16T08:56:46.660Z","comments":true,"path":"api/articles/回文字符串.json","cover":"https://pic.imgdb.cn/item/620cbc3d2ab3f51d91253ecd.jpg","text":"最长回文子序列 最长回文子序列 LPS（Longest Palindromic Subsequence） 状态表示：表示从 到 序列的最长回文子序列 代码 #include &lt;iostream&gt; #include &lt;algorithm&gt; #include ...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"杂题","slug":"杂题","count":2,"path":"api/categories/杂题.json"}],"tags":[{"name":"回文字符串","slug":"回文字符串","count":1,"path":"api/tags/回文字符串.json"},{"name":"回文序列","slug":"回文序列","count":1,"path":"api/tags/回文序列.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/02/cf596ea7a7a4830f.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"二进制问题","uid":"321148201d6e624da674378719102cb9","slug":"二进制","date":"2022-02-14T07:37:34.676Z","updated":"2022-02-16T03:07:17.417Z","comments":true,"path":"api/articles/二进制.json","cover":"https://pic.imgdb.cn/item/620c68f02ab3f51d919a55d1.jpg","text":"异或OR（半加法）： 异或符合加法性质（奇偶性） 奇+奇==偶 奇+偶==奇 偶+偶==偶 偶+奇==奇 ｀｀ 注：奇数-1，偶数+1 bitset bitset&lt;32&gt;q(n)定义为一个空间大小为，名为，内容为（可以为整数，） bitset就像普通的整数一样，可以进...","link":"","photos":[],"count_time":{"symbolsCount":607,"symbolsTime":"1 mins."},"categories":[{"name":"二进制","slug":"二进制","count":1,"path":"api/categories/二进制.json"}],"tags":[{"name":"位运算","slug":"位运算","count":2,"path":"api/tags/位运算.json"},{"name":"二进制","slug":"二进制","count":1,"path":"api/tags/二进制.json"},{"name":"bitset","slug":"bitset","count":1,"path":"api/tags/bitset.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/02/cf596ea7a7a4830f.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"基础算法模板","uid":"cad29d88a5e84162d8735ff1cbc7e6a8","slug":"基础算法模板","date":"2022-02-14T04:49:54.725Z","updated":"2022-02-16T08:34:18.228Z","comments":true,"path":"api/articles/基础算法模板.json","cover":"https://pic.imgdb.cn/item/620a09c42ab3f51d91972f3d.jpg","text":"归并排序 确定分界点， 递归排序 归并——合二为一 void merge_sort(int q[], int l, int r)//q数组从l到r排序 { if (l &gt;= r) return;//出口 int mid = l + r &gt;&gt; 1;//分界点 me...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"模板","slug":"模板","count":2,"path":"api/categories/模板.json"}],"tags":[{"name":"模板","slug":"模板","count":4,"path":"api/tags/模板.json"},{"name":"基础算法","slug":"基础算法","count":1,"path":"api/tags/基础算法.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/02/cf596ea7a7a4830f.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"背包问题","uid":"32c803d1fefb525b38a8f636ccbac12b","slug":"背包问题","date":"2022-02-13T12:09:32.829Z","updated":"2022-02-20T13:19:14.460Z","comments":true,"path":"api/articles/背包问题.json","cover":"https://pic.imgdb.cn/item/62091b852ab3f51d91da68e2.jpg","text":" 01背包例题：01背包问题 描述：有 件物品和一个容量为 的背包，每件物品有各自的价值且只能被选择一次，要求在有限的背包容量下，装入的物品总价值最大。 动态规划是不断决策求最优解的过程，「0-1 背包」即是不断对第 i 个物品的做出决策，「0-1」正好代表不选与选两种决定。 代...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"动态规划","slug":"动态规划","count":1,"path":"api/categories/动态规划.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":2,"path":"api/tags/动态规划.json"},{"name":"背包","slug":"背包","count":1,"path":"api/tags/背包.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/02/cf596ea7a7a4830f.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"最小生成树","uid":"f83333b56248d745b141d3885b656c81","slug":"最小生成树","date":"2022-02-13T07:22:11.269Z","updated":"2022-02-16T03:02:44.803Z","comments":true,"path":"api/articles/最小生成树.json","cover":"https://pic.imgdb.cn/item/62091b402ab3f51d91da1db3.jpg","text":"假设表示图中点数，表示图中边数 朴素版Prim算法（适用于稠密图，复杂度O())思路：将条边到另一条边的距离初始化成从遍历到找到集合外距离最小的点标记为，用来更新它到集合的距离，标记一下 例题：Prim算法求最小生成树 核心代码： // st[i] 表示点i是否在当前生成树集合中...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"图论","slug":"图论","count":4,"path":"api/categories/图论.json"}],"tags":[{"name":"图论","slug":"图论","count":3,"path":"api/tags/图论.json"},{"name":"生成树","slug":"生成树","count":1,"path":"api/tags/生成树.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/02/cf596ea7a7a4830f.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"拓扑排序","uid":"01d132f13ac67dff21350f57c338a855","slug":"拓扑排序","date":"2022-02-13T07:19:11.215Z","updated":"2022-02-16T13:20:10.835Z","comments":true,"path":"api/articles/拓扑排序.json","cover":"https://pic.imgdb.cn/item/62091b702ab3f51d91da51dd.jpg","text":"拓扑排序应用场景在做某些事的时候他们之间有前后关系（顺序关系或者依赖关系），比如安排座位，穿衣服先后，课程学习等等。 拓扑排序只对于有向无环图而言(Directed Acyclic Graph简称DAG) 如果有a,b,c,d等件事情，a的优先级最高，d的优先级最低，那么abcd...","link":"","photos":[],"count_time":{"symbolsCount":865,"symbolsTime":"1 mins."},"categories":[{"name":"图论","slug":"图论","count":4,"path":"api/categories/图论.json"}],"tags":[{"name":"图论","slug":"图论","count":3,"path":"api/tags/图论.json"},{"name":"排序","slug":"排序","count":1,"path":"api/tags/排序.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/02/cf596ea7a7a4830f.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"算法选择","uid":"60a84708f3c49aa5488e16601f40a652","slug":"算法选择","date":"2022-02-13T07:09:10.466Z","updated":"2022-02-13T07:14:46.843Z","comments":true,"path":"api/articles/算法选择.json","cover":"https://pic.imgdb.cn/item/6207ae4e2ab3f51d91ae8070.jpg","text":"数据范围推断算法选择 数据范围 时间复杂度 算法 指数级别 dfs+剪枝，状态压缩dp floyd，dp，高斯消元 ， dp，二分，朴素版Dijkstra，朴素版Prim，Bellman-Ford 块状链表，分块，莫队 各种sort，线段树，树状数组，set/map，heap，拓...","link":"","photos":[],"count_time":{"symbolsCount":477,"symbolsTime":"1 mins."},"categories":[{"name":"数据范围","slug":"数据范围","count":1,"path":"api/categories/数据范围.json"}],"tags":[{"name":"算法选择","slug":"算法选择","count":1,"path":"api/tags/算法选择.json"}],"author":{"name":"Snailuu","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/02/cf596ea7a7a4830f.jpg","link":"/","description":"本就无一物，何惧世道无常","socials":{"github":"https://github.com/snailuu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]}